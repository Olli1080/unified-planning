(define (domain robots-domain)
 (:requirements :strips :typing :negative-preconditions)
 (:types
     - object
 )
 (:predicates (myAgent ?p0 - truck) (clear ?p0 - hoist) (located ?p0 - hoist ?p1 - place) (at ?p0 - truck ?p1 - place) (placed ?p0 - pallet ?p1 - place) (pos ?p0 - crate ?p1 - place) (pos_u ?p0 - crate ?p1 - truck) (on_u ?p0 - crate ?p1 - truck) (on_s ?p0 - crate ?p1 - surface) (on ?p0 - crate ?p1 - hoist) (clear_s ?p0 - surface))
 (:action drive
  :parameters ( ?truck - truck ?x - place ?y - place)
  :precondition (and (myAgent ?truck) (at ?truck ?x))
  :effect (and (at ?truck ?y)))
 (:action load
  :parameters ( ?x - place ?c - crate ?h - hoist)
  :precondition (and (myAgent ?truck) (at ?truck ?x) (pos ?c ?x) (not (clear ?h)) (not (clear ?c)) (on ?c ?h) (located ?h ?x))
  :effect (and (pos ?c ?x) (on ?c ?h) (clear ?c) (clear ?h)))
 (:action unload
  :parameters ( ?x - place ?c - crate ?h - hoist)
  :precondition (and (myAgent ?truck) (located ?h ?x) (pos_u ?c ?truck) (on_u ?c ?truck) (clear ?h) (clear ?c))
  :effect (and (pos ?c ?x) (on ?c ?h) (not (clear ?c)) (not (clear ?h))))
)
